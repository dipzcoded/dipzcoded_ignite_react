{"version":3,"sources":["types.js","reducers/gamesReducer.js","reducers/index.js","store.js","api.js","actions/gamesAction.js","utils.js","animation.js","component/Game.js","img/playstation.svg","img/steam.svg","img/nintendo.svg","img/xbox.svg","img/apple.svg","img/gamepad.svg","component/GameDetails.js","component/Home.js","component/Routes.js","img/logo.svg","component/Navbar.js","component/GlobalStyles.js","App.js","index.js"],"names":["FETCH_GAMES","GET_DETAIL","CLEAR_DETAIL","FILTERED_GAMES","CLEAR_FILTERED","initialState","popular","newGames","upcoming","filtered","details","gameScreenshot","gamesReducer","state","action","type","payload","rootReducer","combineReducers","games","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","baseUrl","year","Date","getFullYear","currentMonth","month","getMonth","getCurrentMonth","currentDay","day","getDate","getCurrentDay","lastYear","nextYear","currentYear","popularGames","upcomingGames","popularGamesUrl","apikey","replace","upcomingGamesUrl","newGamesUrl","searchGamesUrl","gameName","gameDetailsUrl","id","gameSceenshotUrl","clearGameDetail","dispatch","a","smallImage","imagePath","size","includes","fadeIn","hidden","opacity","show","transition","duration","exit","popup","scale","StyledGame","styled","motion","div","Game","name","released","image","onChangeGameType","useDispatch","pathId","toString","variants","initial","animate","layoutId","onClick","axios","get","detailData","screenShotData","data","results","console","log","loadDetails","process","document","body","style","overflow","to","h3","img","src","alt","CardShadow","Detail","Stats","Info","Platforms","Media","Description","Screenshots","GameDetails","push","useHistory","useSelector","getPlatformImages","platform","playstation","xbox","steam","nintendo","apple","gamepad","className","e","target","classList","contains","rating","starRatedColor","numberOfStars","starDimension","starSpacing","platforms","map","background_image","description_raw","GameList","Games","Home","useState","gameType","setGameType","useLocation","pathname","split","useEffect","popularGamesData","newGamesData","upcomingGamesData","GamePathId","upcomingGamesGrid","game","popularGamesGrid","newGamesGrid","length","Routes","path","component","StyledNav","nav","Logo","Navbar","searchData","setSearchData","typeSearch","useRef","logoIcon","onSubmit","preventDefault","filteredData","current","value","ref","onChange","GlobalStyles","createGlobalStyle","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c16b427.chunk.js","sourcesContent":["export const FETCH_GAMES = \"FETCH_GAMES\";\r\nexport const GET_DETAIL = \"GET_DETAIL\";\r\nexport const CLEAR_DETAIL = \"CLEAR_DETAIL\";\r\nexport const FILTERED_GAMES = \"FILTERED_GAMES\";\r\nexport const CLEAR_FILTERED = \"CLEAR_FILTERED\";\r\n","import {\r\n  FETCH_GAMES,\r\n  GET_DETAIL,\r\n  CLEAR_DETAIL,\r\n  FILTERED_GAMES,\r\n  CLEAR_FILTERED,\r\n} from \"../types\";\r\nconst initialState = {\r\n  popular: [],\r\n  newGames: [],\r\n  upcoming: [],\r\n  filtered: null,\r\n  details: null,\r\n  gameScreenshot: null,\r\n};\r\n\r\nconst gamesReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case FETCH_GAMES:\r\n      return {\r\n        ...state,\r\n        popular: payload.popular,\r\n        newGames: payload.newGames,\r\n        upcoming: payload.upcoming,\r\n      };\r\n\r\n    case GET_DETAIL:\r\n      return {\r\n        ...state,\r\n        details: payload.details,\r\n        gameScreenshot: payload.gameScreenshot,\r\n      };\r\n\r\n    case FILTERED_GAMES:\r\n      return {\r\n        ...state,\r\n        filtered: payload.filtered,\r\n      };\r\n\r\n    case CLEAR_DETAIL:\r\n      return {\r\n        ...state,\r\n        details: null,\r\n        gameScreenshot: null,\r\n      };\r\n    case CLEAR_FILTERED: {\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gamesReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport gamesReducer from \"./gamesReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  games: gamesReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n","// base url\r\nconst baseUrl = \"https://api.rawg.io/api/\";\r\n// getting the current month\r\nconst getCurrentMonth = () => {\r\n  const month = new Date().getMonth() + 1;\r\n  if (month < 10) {\r\n    return `0${month}`;\r\n  } else {\r\n    return month;\r\n  }\r\n};\r\n\r\n// getting the current day\r\nconst getCurrentDay = () => {\r\n  const day = new Date().getDate();\r\n  if (day < 10) {\r\n    return `0${day}`;\r\n  } else {\r\n    return day;\r\n  }\r\n};\r\n\r\nconst year = new Date().getFullYear();\r\nconst currentMonth = getCurrentMonth();\r\nconst currentDay = getCurrentDay();\r\nconst lastYear = `${year - 1}-${currentMonth}-${currentDay}`;\r\nconst nextYear = `${year + 1}-${currentMonth}-${currentDay}`;\r\nconst currentYear = `${year}-${currentMonth}-${currentDay}`;\r\n\r\n// POPULAR GAMES\r\nconst popularGames = `games?key=YOUR_API_KEY&dates=${lastYear},${currentYear}&ordering-rating&page_size=10`;\r\nconst upcomingGames = `games?key=YOUR_API_KEY&dates=${currentYear},${nextYear}&ordering=-added&page_size=10`;\r\nconst newGames = `games?key=YOUR_API_KEY&dates=${lastYear},${currentYear}&ordering=-released&page_size=10`;\r\n\r\nexport const popularGamesUrl = (apikey) =>\r\n  `${baseUrl}${popularGames.replace(\"YOUR_API_KEY\", apikey)}`;\r\nexport const upcomingGamesUrl = (apikey) =>\r\n  `${baseUrl}${upcomingGames.replace(\"YOUR_API_KEY\", apikey)}`;\r\nexport const newGamesUrl = (apikey) =>\r\n  `${baseUrl}${newGames.replace(\"YOUR_API_KEY\", apikey)}`;\r\nexport const searchGamesUrl = (gameName, apikey) =>\r\n  `${baseUrl}games?key=${apikey}&search=${gameName}&page_size=9 `;\r\n\r\n// GAME DETAILS\r\nexport const gameDetailsUrl = (id, apikey) =>\r\n  `${baseUrl}games/${id}?key=${apikey}`;\r\n// GAME SCREENSHOT\r\nexport const gameSceenshotUrl = (id, apikey) =>\r\n  `${baseUrl}games/${id}/screenshots?key=${apikey}`;\r\n","import axios from \"axios\";\r\nimport {\r\n  FETCH_GAMES,\r\n  GET_DETAIL,\r\n  CLEAR_DETAIL,\r\n  FILTERED_GAMES,\r\n} from \"../types\";\r\nimport {\r\n  popularGamesUrl,\r\n  upcomingGamesUrl,\r\n  newGamesUrl,\r\n  gameDetailsUrl,\r\n  gameSceenshotUrl,\r\n  searchGamesUrl,\r\n} from \"../api\";\r\nconst clearGameDetail = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_DETAIL,\r\n  });\r\n};\r\n\r\nexport const loadGames = (apikey) => async (dispatch) => {\r\n  try {\r\n    dispatch(clearGameDetail());\r\n    const popularGamesData = await axios.get(popularGamesUrl(apikey));\r\n\r\n    const newGamesData = await axios.get(newGamesUrl(apikey));\r\n    const upcomingGamesData = await axios.get(upcomingGamesUrl(apikey));\r\n    dispatch({\r\n      type: FETCH_GAMES,\r\n      payload: {\r\n        popular: popularGamesData.data.results,\r\n        newGames: newGamesData.data.results,\r\n        upcoming: upcomingGamesData.data.results,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const loadDetails = (id, apikey) => async (dispatch) => {\r\n  try {\r\n    dispatch(clearGameDetail());\r\n    const detailData = await axios.get(gameDetailsUrl(id, apikey));\r\n    const screenShotData = await axios.get(gameSceenshotUrl(id, apikey));\r\n    dispatch({\r\n      type: GET_DETAIL,\r\n      payload: {\r\n        details: detailData.data,\r\n        gameScreenshot: screenShotData.data.results,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const filteredGames = (gameName, apikey) => async (dispatch) => {\r\n  try {\r\n    const filteredData = await axios.get(searchGamesUrl(gameName, apikey));\r\n    dispatch({\r\n      type: FILTERED_GAMES,\r\n      payload: {\r\n        filtered: filteredData.data.results,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","// Media Resize\r\nexport const smallImage = (imagePath, size) => {\r\n  const image = imagePath.includes(\"media/screenshots\")\r\n    ? imagePath.replace(\r\n        \"/media/screenshots\",\r\n        `/media/resize/${size}/-/screenshots`\r\n      )\r\n    : imagePath.replace(\"/media/games\", `/media/resize/${size}/-/games`);\r\n  return image;\r\n};\r\n","export const fadeIn = {\r\n  hidden: {\r\n    opacity: 0,\r\n  },\r\n\r\n  show: {\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 0.75,\r\n    },\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 0.5,\r\n    },\r\n  },\r\n};\r\n\r\nexport const popup = {\r\n  hidden: {\r\n    opacity: 0,\r\n    scale: 0.5,\r\n  },\r\n  show: {\r\n    opacity: 1,\r\n    scale: 1,\r\n    transition: {\r\n      duration: 0.75,\r\n    },\r\n  },\r\n};\r\n","import React from \"react\";\r\n// styling and animation\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n// redux\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadDetails } from \"../actions/gamesAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { smallImage } from \"../utils\";\r\nimport { popup } from \"../animation\";\r\n\r\nconst Game = ({ name, id, released, image, type, onChangeGameType }) => {\r\n  const dispatch = useDispatch();\r\n  const pathId = id.toString();\r\n\r\n  const loadDetailHandler = () => {\r\n    dispatch(loadDetails(id, process.env.REACT_APP_API_KEY));\r\n    document.body.style.overflow = \"hidden\";\r\n    onChangeGameType(type);\r\n  };\r\n\r\n  return (\r\n    <StyledGame\r\n      variants={popup}\r\n      initial=\"hidden\"\r\n      animate=\"show\"\r\n      layoutId={`${pathId}-${type}`}\r\n      onClick={loadDetailHandler}\r\n    >\r\n      <Link to={`/game/${id}`}>\r\n        <motion.h3 layoutId={`title ${pathId}-${type}`}>{name}</motion.h3>\r\n        <p>{released}</p>\r\n        {image && (\r\n          <motion.img\r\n            layoutId={`image ${pathId}-${type}`}\r\n            src={smallImage(image, 640)}\r\n            alt={name}\r\n          />\r\n        )}\r\n      </Link>\r\n    </StyledGame>\r\n  );\r\n};\r\n\r\nconst StyledGame = styled(motion.div)`\r\n  min-height: 30vh;\r\n  box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.2);\r\n  text-align: center;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  img {\r\n    width: 100%;\r\n    height: 40vh;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/playstation.18cc4b9c.svg\";","export default __webpack_public_path__ + \"static/media/steam.d7b8819f.svg\";","export default __webpack_public_path__ + \"static/media/nintendo.f579be04.svg\";","export default __webpack_public_path__ + \"static/media/xbox.3e7db735.svg\";","export default __webpack_public_path__ + \"static/media/apple.5757c37e.svg\";","export default __webpack_public_path__ + \"static/media/gamepad.c9269ef5.svg\";","import React, { Fragment } from \"react\";\r\n// styling and animation\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n// redux\r\nimport { useSelector } from \"react-redux\";\r\nimport { smallImage } from \"../utils\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// images\r\nimport playstation from \"../img/playstation.svg\";\r\nimport steam from \"../img/steam.svg\";\r\nimport nintendo from \"../img/nintendo.svg\";\r\nimport xbox from \"../img/xbox.svg\";\r\nimport apple from \"../img/apple.svg\";\r\nimport gamepad from \"../img/gamepad.svg\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nconst GameDetails = ({ pathId }) => {\r\n  const { push } = useHistory();\r\n  const { details, gameScreenshot } = useSelector((state) => state.games);\r\n  const exitDetail = (e) => {\r\n    if (e.target.classList.contains(\"shadow\")) {\r\n      document.body.style.overflow = \"auto\";\r\n      push(\"/\");\r\n    }\r\n  };\r\n\r\n  const getPlatformImages = (platform) => {\r\n    switch (platform) {\r\n      case \"PlayStation 4\" || \"PlayStation 5\":\r\n        return playstation;\r\n      case \"Xbox One\":\r\n        return xbox;\r\n      case \"PC\":\r\n        return steam;\r\n      case \"Nintendo Switch\":\r\n        return nintendo;\r\n      case \"iOS\":\r\n        return apple;\r\n      default:\r\n        return gamepad;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CardShadow className=\"shadow\" onClick={exitDetail}>\r\n      <Detail layoutId={pathId}>\r\n        {/* stats */}\r\n        <Stats>\r\n          <div className=\"rating\">\r\n            {details !== null && details.name && (\r\n              <motion.h3 layoutId={`title ${pathId}`}>{details.name}</motion.h3>\r\n            )}\r\n            {details !== null && details.rating > -1 && (\r\n              <p>\r\n                Rating :{\" \"}\r\n                <StarRatings\r\n                  rating={details.rating}\r\n                  starRatedColor=\"yellow\"\r\n                  numberOfStars={5}\r\n                  name=\"rating\"\r\n                  starDimension=\"28px\"\r\n                  starSpacing=\"5px\"\r\n                />\r\n              </p>\r\n            )}\r\n          </div>\r\n          {/* info */}\r\n          <Info>\r\n            {details !== null && details.platforms && (\r\n              <Fragment>\r\n                <h3>Platforms</h3>\r\n                <Platforms>\r\n                  {details.platforms.map(({ platform }) => (\r\n                    <img\r\n                      key={platform.id}\r\n                      src={getPlatformImages(platform.name)}\r\n                      alt={platform.name}\r\n                    ></img>\r\n                  ))}\r\n                </Platforms>\r\n              </Fragment>\r\n            )}\r\n          </Info>\r\n        </Stats>\r\n        {/* media */}\r\n        <Media>\r\n          {details !== null && details.background_image && (\r\n            <motion.img\r\n              layoutId={`image ${pathId}`}\r\n              src={smallImage(details.background_image, 1280)}\r\n              alt={details.background_image}\r\n            />\r\n          )}\r\n        </Media>\r\n        {/* description */}\r\n        <Description>\r\n          {details !== null && details.description_raw && (\r\n            <p>{details.description_raw}</p>\r\n          )}\r\n        </Description>\r\n        {/* Gallery */}\r\n        <Screenshots>\r\n          {gameScreenshot !== null &&\r\n            gameScreenshot.map(({ image, id }) => (\r\n              <img\r\n                key={id}\r\n                src={smallImage(image, 1280)}\r\n                alt={`${image}-${id}`}\r\n              />\r\n            ))}\r\n        </Screenshots>\r\n      </Detail>\r\n    </CardShadow>\r\n  );\r\n};\r\n\r\nconst CardShadow = styled(motion.div)`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  overflow-y: overlay;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 5;\r\n  &::-webkit-scrollbar {\r\n    width: 0.5rem;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #ff7676;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background: #fff;\r\n  }\r\n`;\r\n\r\nconst Detail = styled(motion.div)`\r\n  width: 80%;\r\n  border-radius: 1rem;\r\n  padding: 2rem 5rem;\r\n  background: white;\r\n  position: absolute;\r\n  left: 10%;\r\n  color: black;\r\n  z-index: 10;\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Stats = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  text-align: center;\r\n`;\r\n\r\nconst Platforms = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  img {\r\n    margin-left: 3rem;\r\n  }\r\n`;\r\n\r\nconst Media = styled(motion.div)`\r\n  margin-top: 5rem;\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Description = styled(motion.div)`\r\n  margin: 5rem 0rem;\r\n`;\r\n\r\nconst Screenshots = styled(motion.div)`\r\n  img {\r\n    margin-top: -0.4rem;\r\n  }\r\n`;\r\n\r\nexport default GameDetails;\r\n","import React, { useEffect, Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadGames } from \"../actions/gamesAction\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Game from \"./Game\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence, AnimateSharedLayout } from \"framer-motion\";\r\nimport GameDetails from \"./GameDetails\";\r\nimport { fadeIn, popup } from \"../animation\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const [gameType, setGameType] = useState(\"\");\r\n  // get the current location\r\n  const { pathname } = useLocation();\r\n  const pathId = pathname.split(\"/\")[2];\r\n\r\n  useEffect(() => {\r\n    dispatch(loadGames(process.env.REACT_APP_API_KEY));\r\n  }, [dispatch]);\r\n  const games = useSelector((state) => state.games);\r\n  const {\r\n    upcoming,\r\n    newGames,\r\n    popular,\r\n    details,\r\n    gameScreenshot,\r\n    filtered,\r\n  } = games;\r\n\r\n  const onChangeGameType = (type) => {\r\n    setGameType(type);\r\n  };\r\n  const GamePathId = `${pathId}-${gameType}`;\r\n\r\n  const upcomingGamesGrid = upcoming.map((game) => (\r\n    <Game\r\n      key={game.id}\r\n      name={game.name}\r\n      released={game.released}\r\n      id={game.id}\r\n      image={game.background_image}\r\n      type=\"upcoming\"\r\n      onChangeGameType={onChangeGameType}\r\n    />\r\n  ));\r\n\r\n  const popularGamesGrid = popular.map((game) => (\r\n    <Game\r\n      key={game.id}\r\n      name={game.name}\r\n      released={game.released}\r\n      id={game.id}\r\n      image={game.background_image}\r\n      type=\"popular\"\r\n      onChangeGameType={onChangeGameType}\r\n    />\r\n  ));\r\n\r\n  const newGamesGrid = newGames.map((game) => (\r\n    <Game\r\n      key={game.id}\r\n      name={game.name}\r\n      released={game.released}\r\n      id={game.id}\r\n      image={game.background_image}\r\n      type=\"newGames\"\r\n      onChangeGameType={onChangeGameType}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <GameList variants={fadeIn} initial=\"hidden\" animate=\"show\">\r\n      <AnimateSharedLayout type=\"crossfade\">\r\n        <AnimatePresence>\r\n          {pathId && details !== null && gameScreenshot !== null && (\r\n            <GameDetails pathId={GamePathId} />\r\n          )}\r\n        </AnimatePresence>\r\n        {filtered !== null && filtered.length > 0 ? (\r\n          <Fragment>\r\n            <h2>Filtered Games</h2>\r\n            <Games>\r\n              {filtered.map((game) => (\r\n                <Game\r\n                  key={game.id}\r\n                  name={game.name}\r\n                  released={game.released}\r\n                  id={game.id}\r\n                  image={game.background_image}\r\n                  type=\"filtered\"\r\n                  onChangeGameType={onChangeGameType}\r\n                />\r\n              ))}\r\n            </Games>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <h2>Upcoming Games</h2>\r\n\r\n            <Games>\r\n              {upcoming.length > 0 ? (\r\n                upcomingGamesGrid\r\n              ) : (\r\n                <h1>fetching data....</h1>\r\n              )}\r\n            </Games>\r\n            <h2>Popular Games</h2>\r\n            <Games>\r\n              {popular.length > 0 ? (\r\n                popularGamesGrid\r\n              ) : (\r\n                <h1>fetching data....</h1>\r\n              )}\r\n            </Games>\r\n            <h2>new Games</h2>\r\n            <Games>\r\n              {newGames.length > 0 ? newGamesGrid : <h1>fetching data....</h1>}\r\n            </Games>\r\n          </Fragment>\r\n        )}\r\n      </AnimateSharedLayout>\r\n    </GameList>\r\n  );\r\n};\r\n\r\nconst GameList = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0rem 5rem;\r\n  h2 {\r\n    padding: 5rem 0rem;\r\n  }\r\n`;\r\nconst Games = styled(motion.div)`\r\n  min-height: 80vh;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\r\n  grid-column-gap: 3rem;\r\n  grid-row-gap: 5rem;\r\n`;\r\n\r\nexport default Home;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Home from \"../component/Home\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path={[\"/game/:id\", \"/\"]} component={Home} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/logo.9b6b8655.svg\";","import React, { useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport logoIcon from \"../img/logo.svg\";\r\nimport { filteredGames } from \"../actions/gamesAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CLEAR_FILTERED } from \"../types\";\r\nimport { fadeIn } from \"../animation\";\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const typeSearch = useRef(null);\r\n  const onFilter = (e) => {\r\n    setSearchData(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(filteredGames(searchData, process.env.REACT_APP_API_KEY));\r\n    typeSearch.current.value = \"\";\r\n    setSearchData(\"\");\r\n  };\r\n\r\n  return (\r\n    <StyledNav variants={fadeIn} initial=\"hidden\" animate=\"show\">\r\n      <Logo onClick={() => dispatch({ type: CLEAR_FILTERED })}>\r\n        <img src={logoIcon} alt=\"logo \" />\r\n        <h1>Ignite</h1>\r\n      </Logo>\r\n      <form onSubmit={onSubmit} className=\"search\">\r\n        <input\r\n          ref={typeSearch}\r\n          type=\"text\"\r\n          onChange={onFilter}\r\n          value={searchData}\r\n        />\r\n        <button>Search</button>\r\n      </form>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nconst StyledNav = styled(motion.nav)`\r\n  padding: 3rem 5rem;\r\n  text-align: center;\r\n  input {\r\n    width: 30%;\r\n    font-size: 1.5rem;\r\n    padding: 0.5rem;\r\n    border: none;\r\n    margin-top: 1rem;\r\n    box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.2);\r\n    outline: none;\r\n  }\r\n  button {\r\n    font-size: 1.5rem;\r\n    border: none;\r\n    padding: 0.5rem 2rem;\r\n    cursor: pointer;\r\n    background: #ff7676;\r\n    color: #fff;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Logo = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport default Navbar;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n* {\r\n    margin : 0;\r\n    padding : 0;\r\n    box-sizing : border-box;\r\n}\r\n\r\nhtml {\r\n    &::-webkit-scrollbar {\r\n        width: 0.4rem;\r\n      };\r\n    &::-webkit-scrollbar-thumb {\r\n        background-color : darkgrey;\r\n    };\r\n    &::-webkit-scrollbar-track {\r\n        background: #fff;\r\n      };\r\n}\r\nbody {\r\n    font-family : \"Montserrat\", sans-serif;\r\n    width : 100%;\r\n}\r\nh2 {\r\n    font-size : 3rem;\r\n    font-family : \"Abril Fatface\", cursive;\r\n    font-weight : lighter;\r\n    color : #333;\r\n}\r\nh3 {\r\n    font-size : 1.3rem;\r\n    color : #333;\r\n    padding : 1.5rem 0rem;\r\n}\r\np {\r\n    font-size : 1.2rem;\r\n    line-height : 200%;\r\n    color : #696969;\r\n}\r\n\r\na {\r\n    text-decoration : none;\r\n    color : #333;\r\n}\r\nimg {\r\n    display : block;\r\n   \r\n}\r\n\r\ninput {\r\n    font-weight: bold;\r\n    font-family: \"Montserrat\", sans-serif;\r\n}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { Fragment } from \"react\";\nimport Routes from \"./component/Routes\";\nimport Navbar from \"./component/Navbar\";\nimport GlobalStyles from \"./component/GlobalStyles\";\n\nconst App = () => {\n  return (\n    <Fragment>\n      <GlobalStyles />\n      <Navbar />\n      <Routes />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}